Filename: c:\Users\Malek\Documents\GitHub\Barbeit\scenario.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   118    124.2 MiB    124.2 MiB           1   @profile(stream=open('memory_profiler.log', 'w+'))
   119                                         def explore_simulation(simulator, sim_state, max_depth=4):
   120                                             # Initialize queue for state IDs and depths
   121    124.2 MiB      0.0 MiB           1       state_queue = deque([(0, 'Level 1')])
   122                                         
   123                                             # Save the initial state and assignments
   124    124.2 MiB      0.0 MiB           1       state_id = 'Level 1'
   125    124.2 MiB      0.0 MiB           1       state, assignments = simulator.run()
   126    124.2 MiB      0.0 MiB           1       sim_state.save_simulation_state(state, assignments, state_id)
   127                                         
   128    126.3 MiB      0.0 MiB           5       while state_queue:
   129    126.3 MiB      0.0 MiB           4           current_depth, current_state_id = state_queue.popleft()
   130                                         
   131                                                 # Stop if the maximum depth is reached
   132    126.3 MiB      0.0 MiB           4           if current_depth == max_depth:
   133    126.3 MiB      0.0 MiB           3               continue
   134                                         
   135                                                 # Load the current simulation state and assignments
   136    124.2 MiB      0.0 MiB           1           assignments, moment = sim_state.load_simulation_state(current_state_id)
   137                                         
   138    126.3 MiB      0.0 MiB           4           for index, (task, resource) in enumerate(assignments):
   139    126.3 MiB      0.0 MiB           3               sim_state.load_simulation_state(current_state_id)
   140                                                     
   141                                                     # Construct new state IDs for children
   142    126.3 MiB      0.0 MiB           3               child_state_id = f'{current_state_id}_{index+1}'
   143                                         
   144                                                     # Run the simulation for the current assignment
   145    126.3 MiB      2.1 MiB           3               new_state, new_assignments = simulator.run(task, resource)
   146                                         
   147                                                     # Save the new state and assignments
   148    126.3 MiB      0.0 MiB           3               sim_state.save_simulation_state(new_state, new_assignments, child_state_id)
   149                                         
   150                                                     # Add the new state ID and depth to the queue
   151    126.3 MiB      0.0 MiB           3               state_queue.append((current_depth + 1, child_state_id))


Filename: c:\Users\Malek\Documents\GitHub\Barbeit\scenario.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   118    127.3 MiB    127.3 MiB           1   @profile(stream=open('memory_profiler.log', 'w+'))
   119                                         def explore_simulation(simulator, sim_state, max_depth=4):
   120                                             # Initialize queue for state IDs and depths
   121    127.3 MiB      0.0 MiB           1       state_queue = deque([(0, 'Level 1')])
   122                                         
   123                                             # Save the initial state and assignments
   124    127.3 MiB      0.0 MiB           1       state_id = 'Level 1'
   125    127.3 MiB      0.0 MiB           1       state, assignments = simulator.run()
   126    127.3 MiB      0.0 MiB           1       sim_state.save_simulation_state(state, assignments, state_id)
   127                                         
   128    127.3 MiB      0.0 MiB           2       while state_queue:
   129    127.3 MiB      0.0 MiB           1           current_depth, current_state_id = state_queue.popleft()
   130                                         
   131                                                 # Stop if the maximum depth is reached
   132    127.3 MiB      0.0 MiB           1           if current_depth == max_depth:
   133                                                     continue
   134                                         
   135                                                 # Load the current simulation state and assignments
   136    127.3 MiB      0.0 MiB           1           assignments, moment = sim_state.load_simulation_state(current_state_id)
   137                                         
   138    127.3 MiB      0.0 MiB           1           for index, (task, resource) in enumerate(assignments):
   139                                                     sim_state.load_simulation_state(current_state_id)
   140                                                     
   141                                                     # Construct new state IDs for children
   142                                                     child_state_id = f'{current_state_id}_{index+1}'
   143                                         
   144                                                     # Run the simulation for the current assignment
   145                                                     new_state, new_assignments = simulator.run(task, resource)
   146                                         
   147                                                     # Save the new state and assignments
   148                                                     sim_state.save_simulation_state(new_state, new_assignments, child_state_id)
   149                                         
   150                                                     # Add the new state ID and depth to the queue
   151                                                     state_queue.append((current_depth + 1, child_state_id))


Filename: c:\Users\Malek\Documents\GitHub\Barbeit\scenario.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   118    127.3 MiB    127.3 MiB           1   @profile(stream=open('memory_profiler.log', 'w+'))
   119                                         def explore_simulation(simulator, sim_state, max_depth=4):
   120                                             # Initialize queue for state IDs and depths
   121    127.3 MiB      0.0 MiB           1       state_queue = deque([(0, 'Level 1')])
   122                                         
   123                                             # Save the initial state and assignments
   124    127.3 MiB      0.0 MiB           1       state_id = 'Level 1'
   125    127.3 MiB      0.0 MiB           1       state, assignments = simulator.run()
   126    127.3 MiB      0.0 MiB           1       sim_state.save_simulation_state(state, assignments, state_id)
   127                                         
   128    127.3 MiB      0.0 MiB           4       while state_queue:
   129    127.3 MiB      0.0 MiB           3           current_depth, current_state_id = state_queue.popleft()
   130                                         
   131                                                 # Stop if the maximum depth is reached
   132    127.3 MiB      0.0 MiB           3           if current_depth == max_depth:
   133    127.3 MiB      0.0 MiB           2               continue
   134                                         
   135                                                 # Load the current simulation state and assignments
   136    127.3 MiB      0.0 MiB           1           assignments, moment = sim_state.load_simulation_state(current_state_id)
   137                                         
   138    127.3 MiB      0.0 MiB           3           for index, (task, resource) in enumerate(assignments):
   139    127.3 MiB      0.0 MiB           2               sim_state.load_simulation_state(current_state_id)
   140                                                     
   141                                                     # Construct new state IDs for children
   142    127.3 MiB      0.0 MiB           2               child_state_id = f'{current_state_id}_{index+1}'
   143                                         
   144                                                     # Run the simulation for the current assignment
   145    127.3 MiB      0.0 MiB           2               new_state, new_assignments = simulator.run(task, resource)
   146                                         
   147                                                     # Save the new state and assignments
   148    127.3 MiB      0.0 MiB           2               sim_state.save_simulation_state(new_state, new_assignments, child_state_id)
   149                                         
   150                                                     # Add the new state ID and depth to the queue
   151    127.3 MiB      0.0 MiB           2               state_queue.append((current_depth + 1, child_state_id))


Filename: c:\Users\Malek\Documents\GitHub\Barbeit\scenario.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   118    127.3 MiB    127.3 MiB           1   @profile(stream=open('memory_profiler.log', 'w+'))
   119                                         def explore_simulation(simulator, sim_state, max_depth=4):
   120                                             # Initialize queue for state IDs and depths
   121    127.3 MiB      0.0 MiB           1       state_queue = deque([(0, 'Level 1')])
   122                                         
   123                                             # Save the initial state and assignments
   124    127.3 MiB      0.0 MiB           1       state_id = 'Level 1'
   125    127.3 MiB      0.0 MiB           1       state, assignments = simulator.run()
   126    127.3 MiB      0.0 MiB           1       sim_state.save_simulation_state(state, assignments, state_id)
   127                                         
   128    127.3 MiB      0.0 MiB           3       while state_queue:
   129    127.3 MiB      0.0 MiB           2           current_depth, current_state_id = state_queue.popleft()
   130                                         
   131                                                 # Stop if the maximum depth is reached
   132    127.3 MiB      0.0 MiB           2           if current_depth == max_depth:
   133    127.3 MiB      0.0 MiB           1               continue
   134                                         
   135                                                 # Load the current simulation state and assignments
   136    127.3 MiB      0.0 MiB           1           assignments, moment = sim_state.load_simulation_state(current_state_id)
   137                                         
   138    127.3 MiB      0.0 MiB           2           for index, (task, resource) in enumerate(assignments):
   139    127.3 MiB      0.0 MiB           1               sim_state.load_simulation_state(current_state_id)
   140                                                     
   141                                                     # Construct new state IDs for children
   142    127.3 MiB      0.0 MiB           1               child_state_id = f'{current_state_id}_{index+1}'
   143                                         
   144                                                     # Run the simulation for the current assignment
   145    127.3 MiB      0.0 MiB           1               new_state, new_assignments = simulator.run(task, resource)
   146                                         
   147                                                     # Save the new state and assignments
   148    127.3 MiB      0.0 MiB           1               sim_state.save_simulation_state(new_state, new_assignments, child_state_id)
   149                                         
   150                                                     # Add the new state ID and depth to the queue
   151    127.3 MiB      0.0 MiB           1               state_queue.append((current_depth + 1, child_state_id))


Filename: c:\Users\Malek\Documents\GitHub\Barbeit\scenario.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   118    127.3 MiB    127.3 MiB           1   @profile(stream=open('memory_profiler.log', 'w+'))
   119                                         def explore_simulation(simulator, sim_state, max_depth=4):
   120                                             # Initialize queue for state IDs and depths
   121    127.3 MiB      0.0 MiB           1       state_queue = deque([(0, 'Level 1')])
   122                                         
   123                                             # Save the initial state and assignments
   124    127.3 MiB      0.0 MiB           1       state_id = 'Level 1'
   125    127.3 MiB      0.0 MiB           1       state, assignments = simulator.run()
   126    127.3 MiB      0.0 MiB           1       sim_state.save_simulation_state(state, assignments, state_id)
   127                                         
   128    127.3 MiB      0.0 MiB           6       while state_queue:
   129    127.3 MiB      0.0 MiB           5           current_depth, current_state_id = state_queue.popleft()
   130                                         
   131                                                 # Stop if the maximum depth is reached
   132    127.3 MiB      0.0 MiB           5           if current_depth == max_depth:
   133    127.3 MiB      0.0 MiB           4               continue
   134                                         
   135                                                 # Load the current simulation state and assignments
   136    127.3 MiB      0.0 MiB           1           assignments, moment = sim_state.load_simulation_state(current_state_id)
   137                                         
   138    127.3 MiB      0.0 MiB           5           for index, (task, resource) in enumerate(assignments):
   139    127.3 MiB      0.0 MiB           4               sim_state.load_simulation_state(current_state_id)
   140                                                     
   141                                                     # Construct new state IDs for children
   142    127.3 MiB      0.0 MiB           4               child_state_id = f'{current_state_id}_{index+1}'
   143                                         
   144                                                     # Run the simulation for the current assignment
   145    127.3 MiB      0.0 MiB           4               new_state, new_assignments = simulator.run(task, resource)
   146                                         
   147                                                     # Save the new state and assignments
   148    127.3 MiB      0.0 MiB           4               sim_state.save_simulation_state(new_state, new_assignments, child_state_id)
   149                                         
   150                                                     # Add the new state ID and depth to the queue
   151    127.3 MiB      0.0 MiB           4               state_queue.append((current_depth + 1, child_state_id))


Filename: c:\Users\Malek\Documents\GitHub\Barbeit\scenario.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   118    127.4 MiB    127.4 MiB           1   @profile(stream=open('memory_profiler.log', 'w+'))
   119                                         def explore_simulation(simulator, sim_state, max_depth=4):
   120                                             # Initialize queue for state IDs and depths
   121    127.4 MiB      0.0 MiB           1       state_queue = deque([(0, 'Level 1')])
   122                                         
   123                                             # Save the initial state and assignments
   124    127.4 MiB      0.0 MiB           1       state_id = 'Level 1'
   125    127.4 MiB      0.0 MiB           1       state, assignments = simulator.run()
   126    127.4 MiB      0.0 MiB           1       sim_state.save_simulation_state(state, assignments, state_id)
   127                                         
   128    127.4 MiB      0.0 MiB           9       while state_queue:
   129    127.4 MiB      0.0 MiB           8           current_depth, current_state_id = state_queue.popleft()
   130                                         
   131                                                 # Stop if the maximum depth is reached
   132    127.4 MiB      0.0 MiB           8           if current_depth == max_depth:
   133    127.4 MiB      0.0 MiB           7               continue
   134                                         
   135                                                 # Load the current simulation state and assignments
   136    127.4 MiB      0.0 MiB           1           assignments, moment = sim_state.load_simulation_state(current_state_id)
   137                                         
   138    127.4 MiB      0.0 MiB           8           for index, (task, resource) in enumerate(assignments):
   139    127.4 MiB      0.0 MiB           7               sim_state.load_simulation_state(current_state_id)
   140                                                     
   141                                                     # Construct new state IDs for children
   142    127.4 MiB      0.0 MiB           7               child_state_id = f'{current_state_id}_{index+1}'
   143                                         
   144                                                     # Run the simulation for the current assignment
   145    127.4 MiB      0.0 MiB           7               new_state, new_assignments = simulator.run(task, resource)
   146                                         
   147                                                     # Save the new state and assignments
   148    127.4 MiB      0.0 MiB           7               sim_state.save_simulation_state(new_state, new_assignments, child_state_id)
   149                                         
   150                                                     # Add the new state ID and depth to the queue
   151    127.4 MiB      0.0 MiB           7               state_queue.append((current_depth + 1, child_state_id))


Filename: c:\Users\Malek\Documents\GitHub\Barbeit\scenario.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   118    127.4 MiB    127.4 MiB           1   @profile(stream=open('memory_profiler.log', 'w+'))
   119                                         def explore_simulation(simulator, sim_state, max_depth=4):
   120                                             # Initialize queue for state IDs and depths
   121    127.4 MiB      0.0 MiB           1       state_queue = deque([(0, 'Level 1')])
   122                                         
   123                                             # Save the initial state and assignments
   124    127.4 MiB      0.0 MiB           1       state_id = 'Level 1'
   125    127.4 MiB      0.0 MiB           1       state, assignments = simulator.run()
   126    127.4 MiB      0.0 MiB           1       sim_state.save_simulation_state(state, assignments, state_id)
   127                                         
   128    127.4 MiB      0.0 MiB           5       while state_queue:
   129    127.4 MiB      0.0 MiB           4           current_depth, current_state_id = state_queue.popleft()
   130                                         
   131                                                 # Stop if the maximum depth is reached
   132    127.4 MiB      0.0 MiB           4           if current_depth == max_depth:
   133    127.4 MiB      0.0 MiB           3               continue
   134                                         
   135                                                 # Load the current simulation state and assignments
   136    127.4 MiB      0.0 MiB           1           assignments, moment = sim_state.load_simulation_state(current_state_id)
   137                                         
   138    127.4 MiB      0.0 MiB           4           for index, (task, resource) in enumerate(assignments):
   139    127.4 MiB      0.0 MiB           3               sim_state.load_simulation_state(current_state_id)
   140                                                     
   141                                                     # Construct new state IDs for children
   142    127.4 MiB      0.0 MiB           3               child_state_id = f'{current_state_id}_{index+1}'
   143                                         
   144                                                     # Run the simulation for the current assignment
   145    127.4 MiB      0.0 MiB           3               new_state, new_assignments = simulator.run(task, resource)
   146                                         
   147                                                     # Save the new state and assignments
   148    127.4 MiB      0.0 MiB           3               sim_state.save_simulation_state(new_state, new_assignments, child_state_id)
   149                                         
   150                                                     # Add the new state ID and depth to the queue
   151    127.4 MiB      0.0 MiB           3               state_queue.append((current_depth + 1, child_state_id))


Filename: c:\Users\Malek\Documents\GitHub\Barbeit\scenario.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   118    127.4 MiB    127.4 MiB           1   @profile(stream=open('memory_profiler.log', 'w+'))
   119                                         def explore_simulation(simulator, sim_state, max_depth=4):
   120                                             # Initialize queue for state IDs and depths
   121    127.4 MiB      0.0 MiB           1       state_queue = deque([(0, 'Level 1')])
   122                                         
   123                                             # Save the initial state and assignments
   124    127.4 MiB      0.0 MiB           1       state_id = 'Level 1'
   125    127.4 MiB      0.0 MiB           1       state, assignments = simulator.run()
   126    127.4 MiB      0.0 MiB           1       sim_state.save_simulation_state(state, assignments, state_id)
   127                                         
   128    127.4 MiB      0.0 MiB           6       while state_queue:
   129    127.4 MiB      0.0 MiB           5           current_depth, current_state_id = state_queue.popleft()
   130                                         
   131                                                 # Stop if the maximum depth is reached
   132    127.4 MiB      0.0 MiB           5           if current_depth == max_depth:
   133    127.4 MiB      0.0 MiB           4               continue
   134                                         
   135                                                 # Load the current simulation state and assignments
   136    127.4 MiB      0.0 MiB           1           assignments, moment = sim_state.load_simulation_state(current_state_id)
   137                                         
   138    127.4 MiB      0.0 MiB           5           for index, (task, resource) in enumerate(assignments):
   139    127.4 MiB      0.0 MiB           4               sim_state.load_simulation_state(current_state_id)
   140                                                     
   141                                                     # Construct new state IDs for children
   142    127.4 MiB      0.0 MiB           4               child_state_id = f'{current_state_id}_{index+1}'
   143                                         
   144                                                     # Run the simulation for the current assignment
   145    127.4 MiB      0.0 MiB           4               new_state, new_assignments = simulator.run(task, resource)
   146                                         
   147                                                     # Save the new state and assignments
   148    127.4 MiB      0.0 MiB           4               sim_state.save_simulation_state(new_state, new_assignments, child_state_id)
   149                                         
   150                                                     # Add the new state ID and depth to the queue
   151    127.4 MiB      0.0 MiB           4               state_queue.append((current_depth + 1, child_state_id))


Filename: c:\Users\Malek\Documents\GitHub\Barbeit\scenario.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   118    127.4 MiB    127.4 MiB           1   @profile(stream=open('memory_profiler.log', 'w+'))
   119                                         def explore_simulation(simulator, sim_state, max_depth=4):
   120                                             # Initialize queue for state IDs and depths
   121    127.4 MiB      0.0 MiB           1       state_queue = deque([(0, 'Level 1')])
   122                                         
   123                                             # Save the initial state and assignments
   124    127.4 MiB      0.0 MiB           1       state_id = 'Level 1'
   125    127.4 MiB      0.0 MiB           1       state, assignments = simulator.run()
   126    127.4 MiB      0.0 MiB           1       sim_state.save_simulation_state(state, assignments, state_id)
   127                                         
   128    127.4 MiB      0.0 MiB           7       while state_queue:
   129    127.4 MiB      0.0 MiB           6           current_depth, current_state_id = state_queue.popleft()
   130                                         
   131                                                 # Stop if the maximum depth is reached
   132    127.4 MiB      0.0 MiB           6           if current_depth == max_depth:
   133    127.4 MiB      0.0 MiB           5               continue
   134                                         
   135                                                 # Load the current simulation state and assignments
   136    127.4 MiB      0.0 MiB           1           assignments, moment = sim_state.load_simulation_state(current_state_id)
   137                                         
   138    127.4 MiB      0.0 MiB           6           for index, (task, resource) in enumerate(assignments):
   139    127.4 MiB      0.0 MiB           5               sim_state.load_simulation_state(current_state_id)
   140                                                     
   141                                                     # Construct new state IDs for children
   142    127.4 MiB      0.0 MiB           5               child_state_id = f'{current_state_id}_{index+1}'
   143                                         
   144                                                     # Run the simulation for the current assignment
   145    127.4 MiB      0.0 MiB           5               new_state, new_assignments = simulator.run(task, resource)
   146                                         
   147                                                     # Save the new state and assignments
   148    127.4 MiB      0.0 MiB           5               sim_state.save_simulation_state(new_state, new_assignments, child_state_id)
   149                                         
   150                                                     # Add the new state ID and depth to the queue
   151    127.4 MiB      0.0 MiB           5               state_queue.append((current_depth + 1, child_state_id))


Filename: c:\Users\Malek\Documents\GitHub\Barbeit\scenario.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   118    127.4 MiB    127.4 MiB           1   @profile(stream=open('memory_profiler.log', 'w+'))
   119                                         def explore_simulation(simulator, sim_state, max_depth=4):
   120                                             # Initialize queue for state IDs and depths
   121    127.4 MiB      0.0 MiB           1       state_queue = deque([(0, 'Level 1')])
   122                                         
   123                                             # Save the initial state and assignments
   124    127.4 MiB      0.0 MiB           1       state_id = 'Level 1'
   125    127.4 MiB      0.0 MiB           1       state, assignments = simulator.run()
   126    127.4 MiB      0.0 MiB           1       sim_state.save_simulation_state(state, assignments, state_id)
   127                                         
   128    127.4 MiB      0.0 MiB           6       while state_queue:
   129    127.4 MiB      0.0 MiB           5           current_depth, current_state_id = state_queue.popleft()
   130                                         
   131                                                 # Stop if the maximum depth is reached
   132    127.4 MiB      0.0 MiB           5           if current_depth == max_depth:
   133    127.4 MiB      0.0 MiB           4               continue
   134                                         
   135                                                 # Load the current simulation state and assignments
   136    127.4 MiB      0.0 MiB           1           assignments, moment = sim_state.load_simulation_state(current_state_id)
   137                                         
   138    127.4 MiB      0.0 MiB           5           for index, (task, resource) in enumerate(assignments):
   139    127.4 MiB      0.0 MiB           4               sim_state.load_simulation_state(current_state_id)
   140                                                     
   141                                                     # Construct new state IDs for children
   142    127.4 MiB      0.0 MiB           4               child_state_id = f'{current_state_id}_{index+1}'
   143                                         
   144                                                     # Run the simulation for the current assignment
   145    127.4 MiB      0.0 MiB           4               new_state, new_assignments = simulator.run(task, resource)
   146                                         
   147                                                     # Save the new state and assignments
   148    127.4 MiB      0.0 MiB           4               sim_state.save_simulation_state(new_state, new_assignments, child_state_id)
   149                                         
   150                                                     # Add the new state ID and depth to the queue
   151    127.4 MiB      0.0 MiB           4               state_queue.append((current_depth + 1, child_state_id))


